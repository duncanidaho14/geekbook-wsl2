networks:
  proxy:
    external: true
    name: proxy

          

services:
  traefik:
    image: traefik:v2.0.2
    restart: unless-stopped
    container_name: traefikhubsymfony
    ports:
      - "80:80"
      - "443:443"
      - "8085:8085"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8090"
      # - "traefik.http.routers.traefik.rule=Host(`gkbook.traefik.me`)"
      # - "traefik.http.routers.traefik.tls=true"
      # - "traefik.http.routers.traefik.tls.certresolver=gkbook"
      # - "traefik.http.routers.traefik.tls.domains[0].main=gkbook.traefik.com"
      # - "traefik.http.routers.traefik.tls.domains[0].sans=*.gkbook.traefik.org"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOrigin=*"
      - "traefik.http.middlewares.cors.headers.accessControlAllowMethods=GET,OPTIONS,POST"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=Content-Type,Authorization"
      - "traefik.http.routers.api.middlewares=cors@docker"
      # - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:####HASHED_PASSWORD#####"   # Change HASHED_PASSWORD, and username=admin
      # - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      # - "traefik.http.routers.traefik.middlewares=https-redirect"
      # - "traefik.http.routers.traefik-secure.entrypoints=https"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolallowheaders=*"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://mercure.docker.localhost,https://gkbook.traefik.me"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
      # - "traefik.http.middlewares.testheader.headers.addvaryheader=true"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.gkbook.acme.tlschallenge=true"
      - "--certificatesresolvers.gkbook.acme.email=elhadibeddarem@gmail.com"
      - "--certificatesresolvers.gkbook.acme.storage=/letsencrypt/acme.json"   
    volumes:
      - ./letsencrypt:/letsencrypt
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - proxy

  reverse-proxy-https-helper:
    image: alpine
    container_name: www_reverse_proxy
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - proxy

  whoami:
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.traefik.me`)"
    ports:
      - "7980:7980"
    networks:
      - proxy

  db:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: db_geekbook_app
    restart: always
    environment:
      POSTGRES_DB: geekbook
      # You should definitely change the password in production
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
    volumes:
      - database_data:/var/www/html/postgresql/data:rw
    ports:
      - "5032:5032"
    networks:
      - proxy

  redis:
    image: redis/redis-stack:latest
    container_name: db_redis_cache
    restart: always
    environment:
      REDIS_URL: "redis://:redis-stack@db_redis_cache:6379"
      REDIS_HOST: 
      REDIS_USERNAME: 
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis-stack
    ports:
      - "10001:6379"
      - "13333:8001"
    command: redis-server --save 20 1 --loglevel warning --requirepass redis-stack
    volumes:
      - ./local-data/:/redis
      - ./local-redis-stack.conf:/redis-stack.conf
    networks:
      - proxy
  
  redisui:
    image: redislabs/redisinsight:latest
    container_name: db_redis_ui
    restart: always
    ports:
      - "8004:8004"
    volumes:
      - redis_insight:/redis_insight_data
    networks:
      - proxy

  gkbook:
    build: docker
    image: gkbook
    container_name: wwwgeekbookapp
    environment:
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
      POSTGRES_DB: geekbook
      REDIS_URL: "redis://:redis-stack@db_redis_cache:6379"
      REDIS_HOST: 
      REDIS_USERNAME: 
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis-stack
      MERCURE_URL: "https://localhost:2019/.well-known/mercure"
      MERCURE_PUBLIC_URL: "http://localhost:2019/.well-known/mercure"
      ACCESS_CONTROL_ALLOW_ORIGINS: "*"
      MERCURE_PUBLISH_URL: 'http://localhost:2019/.well-known/mercure'
      MERCURE_SUBSCRIBE_URL: 'http://localhost:2019/.well-known/mercure'
      MERCURE_JWT_SECRET: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.yTxnVn4c7LBfetDZ0Ck9tcI9vkAEwk6tEBtkp_g0QLE"
      MERCURE_PUBLISHER_JWT_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.yTxnVn4c7LBfetDZ0Ck9tcI9vkAEwk6tEBtkp_g0QLE'
      MERCURE_SUBSCRIBER_JWT_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.yTxnVn4c7LBfetDZ0Ck9tcI9vkAEwk6tEBtkp_g0QLE'
      DEMO: 1
      ALLOW_ANONYMOUS: 1
      PUBLISH_ALLOWED_ORIGINS: 'http://localhost:2019/.well-known/mercure'
      CORS_ALLOWED_ORIGINS: 'http://localhost:2019/.well-known/mercure'
      DEBUG: 1
    labels:
      - "traefik.http.routers.gkbook.rule=Host(`gkbook.traefik.me`)"
      - "traefik.http.routers.gkbook-tls.tls.domains[0].main=gkbook.traefik.me"
      - "traefik.http.routers.gkbook-tls.tls.domains[0].sans=gkbook-*.traefik.me"
      - "traefik.http.routers.gkbook.tls=true"
      # - "traefik.http.middlewares.test-ipwhitelist.ipwhitelist.sourcerange=mercure.docker.localhost"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolallowheaders=*"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=https://mercure.docker.localhost"
      # - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
      # - "traefik.http.middlewares.testheader.headers.addvaryheader=true"
    volumes:
      - ./docker/vhosts:/etc/apache2/sites-enabled
      - ./:/var/www/html
    restart: always
    depends_on:
      - db
      - meilisearch
      - redis
      - redisui
      - apache
      - mercure
      - traefik
    links:
      - db
      - redis
    ports:
      - "7000:7000"
    networks:
      - proxy

  apache:
    image: httpd:2.4
    container_name: wwwapacheapp
    volumes:
      - ./docker/vhosts/default-ssl.conf:/usr/local/apache2/conf.d/default-ssl.conf
      - ./ssl:/usr/local/apache2/ssl
      - ./html:/var/www/html
    depends_on:
      - whoami
      - db
      - traefik
      - redis
      - redisui
    ports:
      - "8888:8888"
    links:
      - db
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apache.rule=Host(`apache.traefik.me`)"
      # - "traefik.http.services.apache.loadbalancer.server.port=8889"
      # - "traefik.http.middlewares.corsMiddleware.headers.accessControlAllowOrigin=*"
      # - "traefik.http.middlewares.corsMiddleware.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT,DELETE"
      # - "traefik.http.middlewares.corsMiddleware.headers.accessControlAllowHeaders=Origin,Authorization,Content-Type,Accept"
      # - "traefik.http.routers.apache.middlewares=corsMiddleware"
    networks:
      - proxy

  mailer:
    image: schickling/mailcatcher
    container_name: www_mailer_app
    ports:
      - "1025:1025"
      - "1080:1080"
      # vÃ©rifier le port 1080
    networks:
      - proxy

###> meilisearch/search-bundle ###
  meilisearch:
    image: getmeili/meilisearch:${MEILISEARCH_VERSION:-v1.0}
    container_name: www_meilisearch_app
    environment:
      # You should definitely change the master key in production
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-7Twsnmr-TYZcIuISSxDMJXeb6WUHjjOZwKBE73CzYBo}
    volumes:
      - meilisearch_data:/meili_data
    ports:
      - "7700:7700"
    networks:
      - proxy
###< meilisearch/search-bundle ###

  mercure:
    image: dunglas/mercure:latest
    container_name: wwwmercureapp
    restart: unless-stopped
    # env_file:
    #   - './project/.env.local'
    environment:
      # Disables Mercure.rocks auto-HTTPS feature, HTTPS must be handled at edge by Traefik or another proxy in front of it
      SERVER_NAME: ":2019"
      MERCURE_URL: "https://localhost:2019/.well-known/mercure"
      MERCURE_PUBLIC_URL: "http://localhost:2019/.well-known/mercure"
      MERCURE_JWT_SECRET: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.yTxnVn4c7LBfetDZ0Ck9tcI9vkAEwk6tEBtkp_g0QLE"
      MERCURE_PUBLISHER_JWT_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.yTxnVn4c7LBfetDZ0Ck9tcI9vkAEwk6tEBtkp_g0QLE"
      MERCURE_SUBSCRIBER_JWT_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.yTxnVn4c7LBfetDZ0Ck9tcI9vkAEwk6tEBtkp_g0QLE"
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins https://gkbook.traefik.me:443
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    # Enables the development mode, comment the following line to run the hub in prod mode
    # command: /usr/bin/caddy run  --config /etc/caddy/Caddyfile |
    #   /usr/bin/caddy fmt --overwrite /etc/caddy/Caddyfile
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "https://127.0.0.1/healthz",
        ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/mercure_data
      - mercure_config:/mercure_config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mercure.rule=Host(`mercure.docker.localhost`)"
      - traefik.http.routers.mercure.tls=true
      - traefik.http.routers.mercure.tls.certresolver=gkbook
      - traefik.http.routers.mercure.tls.domains[0].main=mercure.docker.localhost
      - traefik.http.routers.mercure.tls.domains[0].sans=*.docker.localhost
    ports:
      - "2019:2019"
    networks:
      - proxy
      
  # caddy:
  #   image: caddy:latest
  #   container_name: wwwcaddyapp
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  #   networks:
  #     - proxy
  #   ports:
  #     - "82:82"
  #     - "4443:4443"
  #     - "4443:4443/udp"
  #   volumes:
  #     - ./src/caddy/Caddyfile:/etc/caddy/Caddyfile
  #     # - ./mercure:/srv
  #     - caddy_data:/data
  #     - caddy_config:/config
    
volumes:
  database_data:
  meilisearch_data:
  certs:
  mercure_data:
  mercure_config:
  redis:
  redis_insight:
  