networks:
  proxy:
    name: proxy
    external: true

services:
  traefik:
    image: traefik:v2.0.2
    restart: unless-stopped
    container_name: traefik_hub_symfony
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8090"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.gkbook.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.gkbook.acme.email=elhadibeddarem@gmail.com"
      - "--certificatesresolvers.gkbook.acme.storage=/letsencrypt/acme.json"
    volumes:
      - ./letsencrypt:/letsencrypt
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - proxy

  reverse-proxy-https-helper:
    image: alpine
    container_name: www_reverse_proxy
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - proxy

  whoami:
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.traefik.me`)"
    networks:
      - proxy
    ports:
      - "7980:7980"

  db:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: db_geekbook_app
    restart: always
    environment:
      POSTGRES_DB: geekbook
      # You should definitely change the password in production
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
    volumes:
      - database_data:/var/www/html/postgresql/data:rw
    networks:
      - proxy
    ports:
      - "5032:5032"

  redis:
    image: redis/redis-stack:latest
    container_name: db_redis_cache
    restart: always
    environment:
      REDIS_URL: "redis://:redis-stack@db_redis_cache:6379"
      REDIS_HOST: 
      REDIS_USERNAME: 
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis-stack
    ports:
      - "10001:6379"
      - "13333:8001"
    command: redis-server --save 20 1 --loglevel warning --requirepass redis-stack
    volumes:
      - ./local-data/:/redis
      - ./local-redis-stack.conf:/redis-stack.conf
    networks:
      - proxy
  
  redisui:
    image: redislabs/redisinsight:latest
    container_name: db_redis_ui
    restart: always
    ports:
      - "8004:8004"
    volumes:
      - redis_insight:/redis_insight_data
    networks:
      - proxy

  gkbook:
    build: docker
    image: gkbook
    container_name: www_geekbook_app
    environment:
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
      POSTGRES_DB: geekbook
      REDIS_URL: "redis://:redis-stack@db_redis_cache:6379"
      REDIS_HOST: 
      REDIS_USERNAME: 
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis-stack
    labels:
      - "traefik.http.routers.gkbook.rule=Host(`gkbook.traefik.me`)"
      - "traefik.http.routers.gkbook-tls.tls.domains[0].main=gkbook.traefik.me"
      - "traefik.http.routers.gkbook-tls.tls.domains[0].sans=gkbook-*.traefik.me"
      - "traefik.http.routers.gkbook.tls=true"
    volumes:
      - ./docker/vhosts:/etc/apache2/sites-enabled
      - ./:/var/www/html
    restart: always
    networks:
      - proxy
    depends_on:
      - db
      - meilisearch
      - redis
      - mercure
      - redisui
    links:
      - db
      - redis

  apache:
    image: httpd:2.4
    container_name: www_apache_app
    volumes:
      - ./docker/vhosts/default-ssl.conf:/usr/local/apache2/conf.d/default-ssl.conf
      - ./ssl:/usr/local/apache2/ssl
      - ./html:/var/www/html
    depends_on:
      - whoami
      - db
      - traefik
      - redis
      - mercure
      - redisui
    networks:
      - proxy
    ports:
      - "8888:8888"
    links:
      - db
      - redis


  mailer:
    image: schickling/mailcatcher
    container_name: www_mailer_app
    networks:
      - proxy 
    ports:
      - "1025:1025"
      - "1080:1080"
      # vÃ©rifier le port 1080

###> meilisearch/search-bundle ###
  meilisearch:
    image: getmeili/meilisearch:${MEILISEARCH_VERSION:-v1.0}
    container_name: www_meilisearch_app
    environment:
      # You should definitely change the master key in production
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-7Twsnmr-TYZcIuISSxDMJXeb6WUHjjOZwKBE73CzYBo}
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - proxy
    ports:
      - "7700:7700"
###< meilisearch/search-bundle ###

  mercure:
    image: dunglas/mercure
    container_name: www_mercure_app
    environment:
        SERVER_NAME: 'www_geekbook_app'
        MERCURE_PUBLISHER_JWT_KEY: '!ChangeMe!'
        MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeMe!'
        MERCURE_EXTRA_DIRECTIVES: |
          cors_origins https://gkbook.traefik.me:443
          anonymous
          demo
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    networks:
      - proxy
    ports:
      - "3200:3200"
      - "4443:4443"
    labels:
      - "traefik.http.routers.mercure.rule=Host(`mercure.docker.localhost`)"
    #command: caddy run -config /var/www/etc/caddy/Caddyfile.dev

volumes:
  database_data:
  meilisearch_data:
  certs:
  mercure_data:
  mercure_config:
  redis:
  redis_insight: