version: '3'

services:
  traefik:
    restart: unless-stopped
    image: traefik:v2.0.2
    container_name: traefik_hub_symfony
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8090"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - dev

  reverse-proxy-https-helper:
    image: alpine
    container_name: www_reverse_proxy
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    networks:
      - dev 

  db:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: db_geekbook_app
    restart: always
    environment:
      POSTGRES_DB: geekbook
      # You should definitely change the password in production
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - dev

  gkbook:
    build: docker
    container_name: www_geek_book
    image: 'postgres:15'
    environment:
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_USER: postgres
      POSTGRES_DB: geekbook
    labels:
      - "traefik.http.routers.app1.rule=Host(`app1.traefik.me`)"
      - "traefik.http.routers.app1-tls.tls.domains[0].main=app1.traefik.me"
      - "traefik.http.routers.app1-tls.tls.domains[0].sans=app1-*.traefik.me"
      - "traefik.http.routers.app1.tls=true"
    volumes:
      - ./docker/vhosts:/etc/apache2/sites-enabled
      - ./:/var/www
    restart: always
    networks:
      - dev
    depends_on:
      - db
      - meilisearch

  apache:
    image: httpd:2.4
    container_name: apache
    volumes:
      - ./docker/vhosts/default-ssl.conf:/usr/local/apache2/conf.d/default-ssl.conf
      - ./ssl:/usr/local/apache2/ssl
      - ./html:/var/www/html
    depends_on:
      - gkbook
      - db
      - traefik
    networks:
      - dev

  mailer:
    image: schickling/mailcatcher
    networks:
      - dev 
      # v√©rifier le port 1080

  meilisearch:
    image: getmeili/meilisearch:${MEILISEARCH_VERSION:-latest}
    container_name: meilisearch
    restart: always
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-!ChangeMe!}
    volumes:
      - ./meilisearch_data:/meili_data
    networks:
      - dev

  mercure:
    image: dunglas/mercure
    command: caddy run -config /etc/caddy/Caddyfile.dev
    environment:
        SERVER_NAME: ':7000'
        MERCURE_PUBLISHER_JWT_KEY: '!ChangeMe!'
        MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeMe!'
    networks:
      - dev

networks:
  dev:

volumes:
  database_data:
  meilisearch_data:
  certs:
